{"version":3,"sources":["components/MyCustomButton/index.jsx","utils/storage.js","components/Header/index.jsx","pages/Layout/index.jsx","assets/imgs/dashboard.jpg","pages/Homepage/index.jsx","utils/constant.js","components/MyCustomInput/index.jsx","redux/actions/actionConstant.js","api/endpoint.js","api/api.js","services/authService/index.js","pages/Auth/login.jsx","redux/actions/authActions/loginAction.js","pages/Auth/register.jsx","redux/actions/authActions/registerAction.js","pages/Auth/resetPswd.jsx","pages/Auth/forgotPswd.jsx","routes/protectedRoute.jsx","components/Icons/index.jsx","pages/Homepage/postedJobs.jsx","components/MyCustomLoader/index.jsx","components/Modals/viewApplications.jsx","services/recruiter/index.js","redux/actions/recruiter/index.js","components/CustomPagination/index.jsx","pages/Dashboard/index.jsx","pages/PostJob/index.jsx","routes/index.jsx","redux/reducer/AuthReducer/registerReducer.js","redux/reducer/AuthReducer/loginReducer.js","redux/reducer/recruiter/jobsReducer.js","redux/reducer/recruiter/applicantsReducer.js","redux/reducer/recruiter/createJob.js","redux/reducer/index.js","redux/store.js","App.jsx","reportWebVitals.js","index.jsx"],"names":["MyCustomButton","props","myClass","clickHandler","text","isLoading","className","onClick","disabled","Spinner","as","animation","size","role","setAccessToken","token","localStorage","setItem","getAccessToken","getItem","setUserRole","setUserId","id","setUserName","name","withRouter","history","Container","push","Dropdown","Toggle","variant","Menu","Item","toast","toastId","clear","Layout","Component","src","dashboardImg","alt","Card","style","width","Body","Title","Text","loginFormConstant","email","password","loginFormValidationConstant","resetPswdForm","forgotFormValidationConstant","resetPswdFormConstant","confirmPassword","resetPswdFormValidationConstant","registerFormConstant","fullName","skills","registerFormValidationConstant","postJobFormConstant","title","description","location","postJobValidationFormConstant","emailRegex","dummyApplicants","MyCustomInput","type","placeholder","isRequired","isInvalid","errorMsg","value","onChangeHandler","onBlurHandler","Form","Control","onBlur","required","onChange","Feedback","commonAction","REGISTER","LOGIN","JOBS","JOBAPPLICATION","CREATEJOBS","apiEndpoints","httpMethods","api","endpoint","apiMethod","data","queryParams","content","apiParameter","method","url","headers","Authorization","undefined","params","axios","then","handleResponse","response","RegisterService","a","LoginService","useHistory","dispatch","useDispatch","useState","loginForm","setLoginForm","loginFormValidation","setLoginFormValidation","useSelector","state","login","isApiLoading","apiError","apiData","useEffect","e","target","prevState","test","Row","Col","xs","md","Group","controlId","Label","to","preventDefault","length","payload","userRole","LoginAction","registerForm","setregisterForm","registerFormValidation","setRegisterFormValidation","passwordAreNotSame","setPasswordAreNotSame","registerAs","setRegisterAs","register","checkPasswordAndConfirmPswdEqual","Button","errors","Array","map","msg","Object","values","ms","message","RegisterAction","isPswdSame","setIsPswdSame","setResetPswdForm","resetPswdFormValidation","setResetPswdFormValidation","key","hasOwnProperty","forgotPswdForm","forgotPswdFormValidation","setForgotPswdFormValidation","forgotPswdService","console","log","catch","error","ProtectedRoute","component","rest","render","pathname","from","Icons","ShowIcon","PostedJobs","viewApps","jobs","jb","sm","MyCustomLoader","ViewApplications","handleClose","applicants","Modal","show","onHide","Header","closeButton","app","charAt","getAllJobsService","pageNo","offsetvalue","limit","offset","getAllApplicationJobsService","createJobService","GetAllJobsAction","ClearPostJobDataAction","CustomPagination","totalPage","activePage","itemsCountPerPage","totalItemsCount","showApps","setShowApps","setActivePage","GetAllJobsApplicationsAction","metadata","count","pageNumber","postJobForm","setPostJobForm","postJobFormValidation","setPostJobFormValidation","createJob","allFieldsEmpty","setAllFieldsEmpty","FloatingLabel","label","height","every","val","createJobAction","Routing","exact","path","Dashboard","PostJob","intialState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","logger","App","position","autoclose","hideProgressBar","draggable","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cce7f720.chunk.js","sourcesContent":["import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nfunction MyCustomButton(props) {\n    const { myClass, clickHandler, text, isLoading } = props\n    return (\n        <button className={myClass} onClick={clickHandler} disabled={isLoading}>\n            {text}&nbsp;\n            {isLoading && <Spinner\n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n            />}\n        </button>\n    );\n}\n\nexport default MyCustomButton;","export const setAccessToken = (token) => {\n    localStorage.setItem('accessToken', token)\n}\n\nexport const getAccessToken = () => {\n    return localStorage.getItem('accessToken')\n}\n\nexport function setUserRole(role) {\n    localStorage.setItem('userRole', role)\n}\n\nexport function getUserRole() {\n    return localStorage.getItem('userRole')\n}\n\nexport function setUserId(id) {\n    localStorage.setItem('userId', id)\n}\n\nexport function getUserId() {\n    return localStorage.getItem('userId')\n}\n\nexport const setUserName = (name) => {\n    localStorage.setItem('name', name)\n}\n\nexport const clearLS = () => {\n    localStorage.clear()\n}","import React from 'react';\nimport { withRouter } from \"react-router\";\nimport { Container, Dropdown } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\n\nimport MyCustomButton from '../MyCustomButton';\nimport { getAccessToken, clearLS } from '../../utils/storage';\nimport './index.scss'\n\nfunction Header(props) {\n    const { history } = props\n\n    const loginSingupHandler = () => {\n        history.push('/login')\n    }\n\n    const logout = () => {\n        toast(<div className=\"text-left\">\n            <h2 className=\"blue\">Logout</h2>\n            <p className=\"fx-14\">You have successfully logged out.</p></div>, {\n            toastId: 'logout'\n        });\n        clearLS()\n        history.push('/')\n    }\n\n    const postAJob = () => {\n        history.push('/home/post-job')\n    }\n\n    return (\n        <header>\n            <Container className=\"d-flex justify-content-between p-3 header-container\">\n                <div className=\"curser-pointer\" onClick={() => getAccessToken() ? history.push('/home') : history.push('/')}>\n                    <span className=\"my\">My</span>\n                    <span className=\"jobs\">Jobs</span>\n                </div>\n                <div className=\"right-portion\">\n                    {!getAccessToken() ? <MyCustomButton text=\"Login/Signup\" myClass=\"header-btn\" clickHandler={loginSingupHandler} /> :\n                        <div className=\"logout-section d-flex\">\n                            <span className=\"post-job white\" onClick={postAJob}>Post a job</span>\n                            <div className=\"name-initiator p-1\">\n                                p\n                            </div>\n                            <Dropdown>\n                                <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\"></Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    <Dropdown.Item onClick={logout}>Logout</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </div>\n                    }\n                </div>\n            </Container>\n        </header>\n    );\n}\n\nexport default withRouter(Header);","import React from 'react';\nimport { withRouter } from 'react-router'\n\nimport Header from '../../components/Header'\nimport './index.scss'\n\nfunction Layout(Component) {\n    return withRouter((props) => {\n        return <>\n            <Header />\n            <div className={`layout-container`}>\n                <Component {...props} />\n            </div>\n        </>\n    })\n}\n\nexport default Layout;","export default __webpack_public_path__ + \"static/media/dashboard.25ab2e9b.jpg\";","import React from 'react';\n\nimport Layout from '../Layout';\nimport './index.scss'\nimport MyCustomButton from '../../components/MyCustomButton';\nimport { Card } from 'react-bootstrap';\nimport dashboardImg from '../../assets/imgs/dashboard.jpg'\n\nfunction Homepage(props) {\n    return (<>\n        <div className=\"homepage-container d-flex justify-content-between\">\n            <div className=\"left-portion text-left pt-2\">\n                Welcome to\n                <p className=\"bold-font m-0 line-height\">\n                    My<span className=\"blue m-0\">Jobs</span>\n                </p>\n                <MyCustomButton text=\"Get Started\" myClass=\"form-btn\" />\n            </div>\n            <div className=\"right-portion text-right\">\n                <img src={dashboardImg} alt=\"interviewer-img\" />\n            </div>\n        </div>\n        <div className=\"bottom-section text-left\">\n            <h4 className=\"pb-4\">Why Us</h4>\n            <div className=\"d-flex justify-content-between pb-3\">\n                <Card style={{ width: '18rem' }}>\n                    <Card.Body>\n                        <Card.Title className=\"blue w-50\">Get more visibility</Card.Title>\n                        <Card.Text className=\"fz-14\">\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.\n                            </Card.Text>\n                    </Card.Body>\n                </Card>\n                <Card style={{ width: '18rem' }} className=\"text-left\">\n                    <Card.Body>\n                        <Card.Title className=\"blue w-50\">Organize your candidates</Card.Title>\n                        <Card.Text className=\"fz-14\">\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.\n                            </Card.Text>\n                    </Card.Body>\n                </Card>\n                <Card style={{ width: '18rem' }} className=\"text-left\">\n                    <Card.Body>\n                        <Card.Title className=\"blue w-50\">Verify their abilities</Card.Title>\n                        <Card.Text className=\"fz-14\">\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.\n                            </Card.Text>\n                    </Card.Body>\n                </Card>\n            </div>\n\n            <h4 className=\"pt-5\">Companies who trust us</h4>\n        </div>\n    </>\n    );\n}\n\nexport default Layout(Homepage);","export const loginFormConstant = {\n    email: '',\n    password: ''\n}\n\nexport const loginFormValidationConstant = {\n    email: false,\n    password: false\n}\n\nexport const resetPswdForm = {\n    email: ''\n}\n\nexport const forgotFormValidationConstant = {\n    email: false\n}\n\nexport const resetPswdFormConstant = {\n    password: '',\n    confirmPassword: ''\n}\n\nexport const resetPswdFormValidationConstant = {\n    password: false,\n    confirmPassword: false\n}\n\nexport const registerFormConstant = {\n    fullName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    skills: ''\n}\n\nexport const registerFormValidationConstant = {\n    fullName: false,\n    email: false,\n    password: false,\n    confirmPassword: false,\n}\n\nexport const postJobFormConstant = {\n    title: '',\n    description: '',\n    location: ''\n}\n\nexport const postJobValidationFormConstant = {\n    title: false,\n    description: false,\n    location: false\n}\n\nexport const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n\nexport const toastType = {\n    LOGIN_SUCCESSFULLY: 'LOGIN_SUCCESSFULLY'\n}\n\nexport const dummyApplicants = [\n    { id: 'jshdkja', name: 'Eliza Lucas', email: 'abc123@email.com', skills: 'Coding, designing, graphics, website, app ui' },\n    { id: 'jshdasd', name: 'Nick Gordon', email: 'abc123@email.com', skills: 'Coding, designing, graphics, website, app ui' },\n    { id: 'jsasdas', name: 'Matthew Pierce', email: 'abc123@email.com', skills: 'Coding, designing, graphics, website, app ui' },\n    { id: 'jshwerw', name: 'Emma Green', email: 'abc123@email.com', skills: 'Coding, designing, graphics, website, app ui' },\n    { id: 'jshxase', name: 'Janet Cooper', email: 'abc123@email.com', skills: 'Coding, designing, graphics, website, app ui' },\n    { id: 'sadsddd', name: 'Lee Cooper', email: 'abc123@email.com', skills: 'Coding, designing, graphics, website, app ui' }\n]","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nfunction MyCustomInput(props) {\n    const { type, placeholder, isRequired, isInvalid, errorMsg, value, onChangeHandler, onBlurHandler } = props\n    return (\n        <>\n            <Form.Control onBlur={onBlurHandler} value={value} type={type} placeholder={placeholder} required={isRequired} isInvalid={isInvalid} onChange={onChangeHandler} />\n            <Form.Control.Feedback type=\"invalid\" className=\"d-flex flex-row-reverse\">\n                {errorMsg}\n            </Form.Control.Feedback>\n        </>\n    );\n}\n\nexport default MyCustomInput;","export const commonAction = {\n    IS_API_LOADING: 'IS_API_LOADING',\n    SET_API_DATA: 'SET_API_DATA',\n    SET_API_ERROR: 'SET_API_ERROR',\n    CLEAR_ERROR: 'CLEAR_ERROR',\n    RESET: 'RESET'\n}\n\nexport const REGISTER = 'REGISTER'\nexport const LOGIN = 'LOGIN'\nexport const JOBS = 'JOBS'\nexport const JOBAPPLICATION = 'JOB_APPLICATION'\nexport const CREATEJOBS = 'CREATE_JOBS'","export const BASE_URL = 'https://jobs-api.squareboat.info/api/v1/'\n\nexport const apiEndpoints = {\n    register: 'auth/register',\n    login: 'auth/login',\n    resetpassword: 'auth/resetpassword',\n    recruiterJobs: 'recruiters/jobs',\n    jobs: 'jobs'\n}\n\nexport const httpMethods = {\n    GET: 'get',\n    PUT: 'put',\n    POST: 'post',\n    DELETE: 'delete',\n    PATCH: 'patch'\n}","import axios from 'axios'\n\nimport { BASE_URL } from './endpoint'\nimport { getAccessToken } from '../utils/storage'\n\nexport const api = (endpoint, apiMethod, data, queryParams) => {\n    const apiParameter = {\n        method: apiMethod,\n        url: BASE_URL + endpoint,\n        headers: {\n            'Access-Control-Allow-Credentials': 'true',\n            Authorization: getAccessToken()\n        },\n        // withCredentials: true\n    }\n    // Conditinal check for sending data/queryparams in apiParameter\n    if (data !== null) {\n        apiParameter.data = data\n    }\n    if (queryParams !== undefined) {\n        apiParameter.params = queryParams\n    }\n    return axiosApi(apiParameter)\n}\n\nfunction axiosApi(content) {\n    return axios(content).then(handleResponse)\n}\n\nfunction handleResponse(response) {\n    // const type = response.headers['content-type']\n    // let res\n    // if (type === 'application/json') {\n    //     res = response\n    // }\n    return response\n}\n","import { api } from \"../../api/api\";\nimport { apiEndpoints, httpMethods } from \"../../api/endpoint\";\n\nexport async function RegisterService(data) {\n    return api(apiEndpoints.register, httpMethods.POST, data)\n}\n\nexport async function LoginService(data) {\n    return api(apiEndpoints.login, httpMethods.POST, data)\n}\n\nexport async function forgotPswdService(email) {\n    return api(apiEndpoints.resetpassword, httpMethods.GET, null, { email: email })\n}","import React, { useState, useEffect } from 'react'\nimport { Form, Row, Col } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from \"react-router-dom\"\nimport './auth.scss'\n\nimport { loginFormConstant, loginFormValidationConstant, emailRegex } from '../../utils/constant'\nimport MyCustomInput from '../../components/MyCustomInput'\nimport Layout from '../Layout'\nimport MyCustomButton from '../../components/MyCustomButton';\nimport { LoginAction, ClearLoginErrorAction, ClearLoginDataAction } from '../../redux/actions/authActions/loginAction'\n\nfunction Login() {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [loginForm, setLoginForm] = useState(loginFormConstant)\n    const [loginFormValidation, setLoginFormValidation] = useState(loginFormValidationConstant)\n    const { isApiLoading, apiError, apiData } = useSelector((state) => state.login)\n\n    useEffect(() => {\n        return () => {\n            dispatch(ClearLoginErrorAction())\n        }\n    }, [])\n\n    useEffect(() => {\n        if (apiData) {\n            dispatch(ClearLoginDataAction())\n            history.push('/home')\n        }\n    }, [apiData])\n\n    const onChangeHandler = e => {\n        const { id, value } = e.target\n        setLoginForm((prevState) => ({ ...prevState, [id]: value }))\n        onBlurHandler(e)\n\n        if (apiError) {\n            // dispatch(ClearLoginErrorAction())\n        }\n    }\n\n    const loginBtn = (e) => {\n        e.preventDefault()\n        if (!emailRegex.test(loginForm.email)) {\n            setLoginFormValidation((prevState) => ({ ...prevState, email: !emailRegex.test(loginForm.email) }))\n            return\n        } else if (loginForm.password.length === 0) {\n            setLoginFormValidation((prevState) => ({ ...prevState, password: loginForm.password.length === 0 }))\n            return\n        }\n        const payload = {\n            \"email\": loginForm.email,\n            \"password\": loginForm.password\n        }\n        dispatch(LoginAction(payload))\n    }\n\n    const onBlurHandler = e => {\n        const { id, value } = e.target\n        if (id === 'email') {\n            setLoginFormValidation((prevState) => ({ ...prevState, email: !emailRegex.test(value) }))\n        } else setLoginFormValidation((prevState) => ({ ...prevState, password: value === 0 }))\n    }\n\n    return (\n        <div className=\"login-container form-adjuster\">\n            <Row className=\"justify-content-center\">\n                <Col xs={8} md={5} className=\"bg-white form-shadow p-4\">\n                    <Form>\n                        <h4 className=\"text-left mb-4\">Login</h4>\n                        <Form.Group className=\"mb-3 text-left\" controlId=\"email\">\n                            <Form.Label>Email address*</Form.Label>\n                            <MyCustomInput value={loginForm.email} onChangeHandler={onChangeHandler} type=\"email\" placeholder=\"Enter your email\" required={true} isInvalid={loginFormValidation.email} errorMsg={loginFormValidation.email ? 'Invalid email address.' : ''} onBlurHandler={onBlurHandler} />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3 text-left\" controlId=\"password\">\n                            <div className=\"d-flex justify-content-between\">\n                                <Form.Label>Password*</Form.Label>\n                                <Link to=\"/forgot-password\"><span className=\"blue\">Forgot your password?</span></Link>\n                            </div>\n                            <MyCustomInput value={loginForm.password} onChangeHandler={onChangeHandler} type=\"password\" placeholder=\"Enter your password\" required={true} isInvalid={loginFormValidation.password} errorMsg={loginFormValidation.password ? 'The field is mandatory.' : ''} />\n                            {apiError ? <p className=\"text-danger text-right\">Incorrect email address or password.</p> : ''}\n                        </Form.Group>\n                        <div className=\"justify-content-center submit-btn\">\n                            <MyCustomButton text=\"Login\" clickHandler={loginBtn} isLoading={isApiLoading} myClass=\"form-btn\" />\n                        </div>\n                        <h6>New to MyJobs? <Link to=\"/register\"><span className=\"blue create-account-link\">Create an account</span></Link></h6>\n                    </Form>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default Layout(Login);","import { toast } from \"react-toastify\"\n\nimport { LOGIN, commonAction } from \"../actionConstant\"\nimport { LoginService } from \"../../../services/authService\"\nimport { setAccessToken, setUserId, setUserRole, setUserName } from \"../../../utils/storage\"\n\nexport function LoginAction(payload) {\n    return async dispatch => {\n        try {\n            dispatch({ type: `${LOGIN}_${commonAction.IS_API_LOADING}` })\n            const response = await LoginService(payload)\n            setAccessToken(response.data.data.token)\n            setUserId(response.data.data.id)\n            setUserRole(response.data.data.userRole)\n            setUserName(response.data.data.name)\n            dispatch({ type: `${LOGIN}_${commonAction.SET_API_DATA}`, payload: response.data })\n            toast(<div className=\"text-left\">\n                <h2 className=\"blue\">Login</h2>\n                <p className=\"fx-14 success\">You have successfully logged in.</p></div>, {\n                toastId: 'login'\n            });\n        } catch (error) {\n            dispatch({ type: `${LOGIN}_${commonAction.SET_API_ERROR}`, payload: error.response })\n        }\n    }\n}\n\nexport function ClearLoginErrorAction() {\n    return dispatch => {\n        dispatch({ type: `${LOGIN}_${commonAction.CLEAR_ERROR}` })\n    }\n}\n\nexport function ClearLoginDataAction() {\n    return dispatch => {\n        dispatch({ type: `${LOGIN}_${commonAction.RESET}` })\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport './auth.scss'\n\nimport Layout from '../Layout';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { registerFormConstant, registerFormValidationConstant, emailRegex } from '../../utils/constant';\nimport MyCustomInput from '../../components/MyCustomInput';\nimport MyCustomButton from '../../components/MyCustomButton';\nimport { RegisterAction, ClearRegisterErrorAction, ClearRegisterDataAction } from '../../redux/actions/authActions/registerAction'\n\nfunction Register(props) {\n    const history = useHistory()\n    const [registerForm, setregisterForm] = useState(registerFormConstant)\n    const [registerFormValidation, setRegisterFormValidation] = useState(registerFormValidationConstant)\n    const [passwordAreNotSame, setPasswordAreNotSame] = useState(false)\n    const [registerAs, setRegisterAs] = useState(0)\n    const dispatch = useDispatch()\n    const { isApiLoading, apiError, apiData } = useSelector((state) => state.register)\n\n    useEffect(() => {\n        return () => {\n            dispatch(ClearRegisterErrorAction())\n        }\n    }, [])\n\n    useEffect(() => {\n        if (apiData) {\n            history.push('/home')\n            dispatch(ClearRegisterDataAction())\n        }\n    }, [apiData])\n\n    const onChangeHandler = e => {\n        const { id, value } = e.target\n        setregisterForm((prevState) => ({ ...prevState, [id]: value }))\n        onBlurHandler(e)\n        if (id === 'confirmPassword' && value.length !== 0) {\n            checkPasswordAndConfirmPswdEqual()\n        }\n        if (apiError) {\n            // dispatch(ClearRegisterErrorAction())\n        }\n    }\n\n    const registerBtn = (e) => {\n        e.preventDefault()\n        if (registerForm.fullName.length === 0) {\n            setRegisterFormValidation((prevState) => ({ ...prevState, fullName: registerForm.fullName.length === 0 }))\n            return\n        } else if (!emailRegex.test(registerForm.email)) {\n            setRegisterFormValidation((prevState) => ({ ...prevState, email: !emailRegex.test(registerForm.email) }))\n            return\n        } else if (registerForm.password.length <= 6) {\n            setRegisterFormValidation((prevState) => ({ ...prevState, password: registerForm.password.length <= 6 }))\n            return\n        } else if (registerForm.confirmPassword.length <= 6) {\n            setRegisterFormValidation((prevState) => ({ ...prevState, confirmPassword: registerForm.confirmPassword.length <= 6 }))\n            return\n        }\n\n        if (registerForm.confirmPassword !== registerForm.password) {\n            setPasswordAreNotSame(true)\n            return\n        } else setPasswordAreNotSame(false)\n\n        const payload = {\n            \"email\": registerForm.email,\n            \"userRole\": registerAs,\n            \"password\": registerForm.password,\n            \"confirmPassword\": registerForm.confirmPassword,\n            \"name\": registerForm.fullName,\n            \"skills\": registerForm.skills\n        }\n\n        dispatch(RegisterAction(payload))\n    }\n\n    const checkPasswordAndConfirmPswdEqual = () => {\n        if (registerForm.confirmPassword !== registerForm.password && registerForm.confirmPassword ?.length !== 0) {\n            setPasswordAreNotSame(true)\n            return\n        } else setPasswordAreNotSame(false)\n    }\n\n    const onBlurHandler = e => {\n        const { id, value } = e.target\n        if (id === 'email') {\n            setRegisterFormValidation((prevState) => ({ ...prevState, email: !emailRegex.test(value) }))\n        } else if (id === 'password' || id === 'confirmPassword') {\n            setRegisterFormValidation((prevState) => ({ ...prevState, [id]: value.length <= 6 }))\n        } else if (id !== 'skills') {\n            setRegisterFormValidation((prevState) => ({ ...prevState, [id]: value.length === 0 }))\n        }\n        checkPasswordAndConfirmPswdEqual()\n    }\n\n    return (\n        <div className=\"register-container\">\n\n            <Row className=\"justify-content-center\">\n                <Col xs={8} md={5} className=\"bg-white form-shadow p-4\">\n                    <Form>\n                        <h4 className=\"text-left mb-4\">Signup</h4>\n                        <Row className=\"mb-3\">\n                            <Form.Label className=\"mb-3 text-left\">I’m a*</Form.Label>\n                            <Col md={3}>\n                                <Button variant={`${registerAs === 0 ? 'blue-bg' : 'outline-secondary'}`} onClick={() => setRegisterAs(0)} className={`${registerAs === 0 ? 'white' : ''}`}>Recruiter</Button>\n                            </Col>\n                            <Col md={3}>\n                                <Button variant={`${registerAs === 1 ? 'blue-bg' : 'outline-secondary'}`} onClick={() => setRegisterAs(1)} className={`${registerAs === 1 ? 'white' : ''}`}>Candidate</Button>\n                            </Col>\n                        </Row>\n                        <Form.Group className=\"mb-3 text-left\" controlId=\"fullName\">\n                            <Form.Label>Full name*</Form.Label>\n                            <MyCustomInput value={registerForm.fullName} onChangeHandler={onChangeHandler} type=\"text\" placeholder=\"Enter your full name\" required={true} isInvalid={registerFormValidation.fullName} errorMsg={registerFormValidation.fullName ? 'The field is mandatory.' : ''} onBlurHandler={onBlurHandler} />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3 text-left\" controlId=\"email\">\n                            <Form.Label>Email address*</Form.Label>\n                            <MyCustomInput value={registerForm.email} onChangeHandler={onChangeHandler} type=\"email\" placeholder=\"Enter your email\" required={true} isInvalid={registerFormValidation.email} errorMsg={registerFormValidation.email ? 'Invalid email address.' : ''} onBlurHandler={onBlurHandler} />\n                        </Form.Group>\n                        <Row>\n                            <Col md={6}>\n                                <Form.Group className=\"mb-3 text-left\" controlId=\"password\">\n                                    <div className=\"d-flex justify-content-between\">\n                                        <Form.Label>Password*</Form.Label>\n                                    </div>\n                                    <MyCustomInput value={registerForm.password} onChangeHandler={onChangeHandler} type=\"password\" placeholder=\"Enter your password\" required={true} isInvalid={registerFormValidation.password} errorMsg={registerFormValidation.password ? 'Password must be greater than 6 characters.' : ''} />\n                                </Form.Group>\n                            </Col>\n                            <Col md={6}>\n                                <Form.Group className=\"mb-3 text-left\" controlId=\"confirmPassword\">\n                                    <div className=\"d-flex justify-content-between\">\n                                        <Form.Label>Confirm Password*</Form.Label>\n                                    </div>\n                                    <MyCustomInput value={registerForm.confirmPassword} onChangeHandler={onChangeHandler} type=\"password\" placeholder=\"Enter your confirm password\" required={true} isInvalid={registerFormValidation.confirmPassword} errorMsg={registerFormValidation.confirmPassword ? 'Password must be greater than 6 characters.' : passwordAreNotSame ? 'Please enter correct confirm password.' : ''} />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Form.Group className=\"mb-3 text-left\" controlId=\"skills\">\n                            <Form.Label>Skills</Form.Label>\n                            <MyCustomInput value={registerForm.skills} onChangeHandler={onChangeHandler} type=\"text\" placeholder=\"Enter comma separated skills\" required={true} isInvalid={registerFormValidation.skills} errorMsg={registerFormValidation.skills ? 'The field is mandatory.' : ''} onBlurHandler={onBlurHandler} />\n                        </Form.Group>\n                        {apiError ? <p className=\"text-danger text-right\">{apiError.errors instanceof Array ? apiError.errors.map(msg => Object.values(msg).map(ms => ms)) : apiError.message}</p> : ''}\n                        <div className=\"justify-content-center submit-btn\">\n                            <MyCustomButton text=\"Signup\" clickHandler={registerBtn} isLoading={isApiLoading} myClass=\"form-btn\" />\n                        </div>\n                        <h6>Have an account? <Link to=\"/login\"><span className=\"blue create-account-link\">Login</span></Link></h6>\n                    </Form>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default Layout(Register);","import { REGISTER, commonAction } from \"../actionConstant\"\nimport { RegisterService } from \"../../../services/authService\"\nimport { setAccessToken, setUserId, setUserRole, setUserName } from \"../../../utils/storage\"\n\nexport function RegisterAction(payload) {\n    return async dispatch => {\n        try {\n            dispatch({ type: `${REGISTER}_${commonAction.IS_API_LOADING}`, payload: true })\n            const response = await RegisterService(payload)\n            setAccessToken(response.data.data.token)\n            setUserId(response.data.data.id)\n            setUserRole(response.data.data.userRole)\n            setUserName(response.data.data.name)\n            dispatch({ type: `${REGISTER}_${commonAction.SET_API_DATA}`, payload: response.data })\n        } catch (error) {\n            dispatch({ type: `${REGISTER}_${commonAction.SET_API_ERROR}`, payload: error.response })\n        }\n    }\n}\n\nexport function ClearRegisterErrorAction() {\n    return dispatch => {\n        dispatch({ type: `${REGISTER}_${commonAction.CLEAR_ERROR}` })\n    }\n}\n\nexport function ClearRegisterDataAction() {\n    return dispatch => {\n        dispatch({ type: `${REGISTER}_${commonAction.RESET}` })\n    }\n}\n","import React, { useState } from 'react';\nimport { Row, Col, Form } from 'react-bootstrap';\nimport MyCustomInput from '../../components/MyCustomInput';\nimport MyCustomButton from '../../components/MyCustomButton';\nimport { resetPswdFormConstant, resetPswdFormValidationConstant } from '../../utils/constant';\nimport Layout from '../Layout';\nimport './auth.scss'\n\nfunction ResetPswd() {\n    const [isPswdSame, setIsPswdSame] = useState(false)\n    const [resetPswdForm, setResetPswdForm] = useState(resetPswdFormConstant)\n    const [resetPswdFormValidation, setResetPswdFormValidation] = useState(resetPswdFormValidationConstant)\n\n    const onChangeHandler = e => {\n        const { id, value } = e.target\n        setResetPswdForm((prevState) => ({ ...prevState, [id]: value }))\n        onBlurHandler(e)\n    }\n\n    const resetBtn = (e) => {\n        e.preventDefault()\n        for (const key in resetPswdForm) {\n            if (resetPswdForm.hasOwnProperty(key)) {\n                if (resetPswdForm[key].length === 0) {\n                    setResetPswdFormValidation((prevState) => ({ ...prevState, [key]: resetPswdForm[key].length === 0 }))\n                    return\n                }\n            }\n        }\n\n        if (resetPswdForm.password !== resetPswdForm.confirmPassword) {\n            setIsPswdSame(true)\n            return\n        } else if (resetPswdForm.password === resetPswdForm.confirmPassword) {\n            setIsPswdSame(false)\n        }\n    }\n\n    const onBlurHandler = e => {\n        const { id, value } = e.target\n        setResetPswdFormValidation((prevState) => ({ ...prevState, [id]: value.length === 0 }))\n    }\n\n    return (\n        <div className=\"reset-pswd-container\">\n            <Row className=\"justify-content-center\">\n                <Col xs={8} md={5} className=\"bg-white form-shadow p-4\">\n                    <Form>\n                        <div className=\"text-left\">\n                            <h4>Reset Your Password</h4>\n                            <p className=\"fz-14\">Enter your new password below.</p>\n                        </div>\n                        <Form.Group className=\"mb-3 text-left\" controlId=\"password\">\n                            <Form.Label>New password</Form.Label>\n                            <MyCustomInput value={resetPswdForm.password} onChangeHandler={onChangeHandler} type=\"password\" placeholder=\"Enter your password\" required={true} isInvalid={resetPswdFormValidation.password} errorMsg={resetPswdFormValidation.password ? 'Please enter your password' : ''} onBlurHandler={onBlurHandler} />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3 text-left\" controlId=\"confirmPassword\">\n                            <div className=\"d-flex justify-content-between\">\n                                <Form.Label>Confirm new password</Form.Label>\n                            </div>\n                            <MyCustomInput value={resetPswdForm.confirmPassword} onChangeHandler={onChangeHandler} type=\"password\" placeholder=\"Enter your new password\" required={true} isInvalid={resetPswdFormValidation.confirmPassword} errorMsg={resetPswdFormValidation.confirmPassword ? 'Please enter your new password' : ''} />\n                        </Form.Group>\n                        {isPswdSame && <p>Your password not matched.</p>}\n                        <div className=\"justify-content-center pt-3\">\n                            <MyCustomButton text=\"Reset\" clickHandler={resetBtn} myClass=\"form-btn\" />\n                        </div>\n                    </Form>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default Layout(ResetPswd);","import React, { useState } from 'react';\nimport { Row, Col, Form } from 'react-bootstrap';\n\nimport { resetPswdForm, emailRegex, forgotFormValidationConstant } from '../../utils/constant';\nimport MyCustomButton from '../../components/MyCustomButton';\nimport MyCustomInput from '../../components/MyCustomInput';\nimport Layout from '../Layout';\nimport { forgotPswdService } from '../../services/authService';\nimport './auth.scss'\n\nfunction ForgotPswd() {\n    const [forgotPswdForm, setResetPswdForm] = useState(resetPswdForm)\n    const [forgotPswdFormValidation, setForgotPswdFormValidation] = useState(forgotFormValidationConstant)\n\n    const onChangeHandler = e => {\n        const { id, value } = e.target\n        setResetPswdForm((prevState) => ({ ...prevState, [id]: value }))\n        onBlurHandler(e)\n    }\n\n    const submitBtn = (e) => {\n        e.preventDefault()\n        if (!emailRegex.test(forgotPswdForm.email)) {\n            setForgotPswdFormValidation((prevState) => ({ ...prevState, email: !emailRegex.test(forgotPswdForm.email) }))\n            return\n        }\n        forgotPswdService(forgotPswdForm.email).then(response => {\n            console.log(response, 'success')\n        }).catch(error => {\n            console.log(error, 'error')\n        })\n    }\n\n    const onBlurHandler = e => {\n        const { id, value } = e.target\n        if (id === 'email') {\n            setForgotPswdFormValidation((prevState) => ({ ...prevState, email: !emailRegex.test(value) }))\n        }\n    }\n\n    return (\n        <div className=\"forgot-pswd-container\">\n            <Row className=\"justify-content-center\">\n                <Col xs={8} md={5} className=\"bg-white form-shadow p-4\">\n                    <Form>\n                        <div className=\"text-left\">\n                            <h4>Forgot your password?</h4>\n                            <p className=\"fz-14\">Enter the email associated with your account and we’ll send you instructions to reset your password.</p>\n                        </div>\n                        <Form.Group className=\"mb-3 text-left\" controlId=\"email\">\n                            <Form.Label>Email address</Form.Label>\n                            <MyCustomInput value={forgotPswdForm.email} onChangeHandler={onChangeHandler} type=\"email\" placeholder=\"Enter your email\" required={true} isInvalid={forgotPswdFormValidation.email} errorMsg={forgotPswdFormValidation.email ? 'Invalid email address.' : ''} onBlurHandler={onBlurHandler} />\n                        </Form.Group>\n                        <div className=\"justify-content-center pt-3\">\n                            <MyCustomButton text=\"Submit\" clickHandler={submitBtn} myClass=\"form-btn\" />\n                        </div>\n                    </Form>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default Layout(ForgotPswd);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getAccessToken } from '../utils/storage';\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n    return (\n        <Route {...rest} render={\n            props => {\n                if (getAccessToken()) {\n                    return <Component {...rest} {...props} />\n                } else {\n                    return <Redirect to={\n                        {\n                            pathname: '/',\n                            state: {\n                                from: props.location\n                            }\n                        }\n                    } />\n                }\n            }\n        } />\n    )\n}\n\nexport default ProtectedRoute;","import React from 'react';\n\nimport { GoLocation } from 'react-icons/go';\nimport { AiFillHome } from 'react-icons/ai';\n\nfunction Icons(props) {\n    const { type } = props\n\n    const ShowIcon = () => {\n        switch (type) {\n            case 'Location':\n                return <GoLocation />\n            case 'Home':\n                return <AiFillHome />\n            default: return null\n        }\n    }\n\n    return (\n        ShowIcon()\n    );\n}\n\nexport default Icons;","import React from 'react'\nimport { Card, Col } from 'react-bootstrap'\nimport MyCustomButton from '../../components/MyCustomButton'\nimport Icons from '../../components/Icons'\n\nfunction PostedJobs(props) {\n    const { viewApps, jobs } = props\n    return (\n        jobs ?.length !== 0 && jobs ?.map(jb =>\n            <Col key={jb.id} md={4} xs={12} sm={12}>\n                <Card className=\"d-flex flex-nowrap m-2\" style={{ width: '18rem' }}>\n                    <Card.Body className=\"text-left\">\n                        <Card.Title className=\"job-title\">{jb.title}</Card.Title>\n                        <Card.Text className=\"job-description\">\n                            {jb.description}\n                        </Card.Text>\n                        <div className=\"align-items-baseline d-flex justify-content-between w-100\">\n                            <div><Icons type=\"Location\" />&nbsp;<span>Bengaluru</span></div>\n                            <MyCustomButton myClass=\"view-app-btn\" text=\"View applications\" clickHandler={() => viewApps(jb.id)} />\n                        </div>\n                    </Card.Body>\n                </Card>\n            </Col >\n        )\n    );\n}\n\nexport default PostedJobs;","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nfunction MyCustomLoader(props) {\n    return (\n        <Spinner animation=\"border\" role=\"status\" variant=\"secondary\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n    );\n}\n\nexport default MyCustomLoader;","import React from 'react';\nimport { Modal, Card } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\n\nimport MyCustomLoader from '../MyCustomLoader';\nimport './index.scss'\nimport { dummyApplicants } from '../../utils/constant';\n\nfunction ViewApplications(props) {\n    const { handleClose } = props\n\n    const { isApiLoading } = useSelector((state) => state.applicants)\n\n    return (\n        <Modal size=\"lg\" show={true} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Applicants for this job</Modal.Title>\n            </Modal.Header>\n            {isApiLoading ? <div className=\"loading-section\"> <MyCustomLoader /> </div> :\n                dummyApplicants && <Modal.Body className={`${!dummyApplicants ? 'no-data' : ''}`}>\n                    Total 35 applications\n                {dummyApplicants ? <div className=\"body-content d-flex flex-wrap justify-content-around p-2\">\n                        {dummyApplicants ?.map(app => <Card className=\"m-2\" key={app.id} style={{ width: '18rem' }}>\n                            <Card.Body>\n                                <div className=\"applicant-detail-top d-flex pb-4\">\n                                    <div className=\"name-initiator mr-4\">{app.name.charAt(0)}</div>\n                                    <div>\n                                        <Card.Title>{app.name}</Card.Title>\n                                        <p className=\"fz-14\">{app.email}</p>\n                                    </div>\n                                </div>\n                                <Card.Text>\n                                    <p className=\"m-0 heading\">Skills</p>\n                                    <p className=\"skills\">{app.skills}</p>\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>)}\n                    </div> : <div className=\"no-applicants-container\">No applications available!</div>}</Modal.Body>\n            }\n        </Modal>\n    );\n}\n\nexport default ViewApplications;","import { api } from \"../../api/api\";\nimport { apiEndpoints, httpMethods } from \"../../api/endpoint\";\n\nexport async function getAllJobsService(pageNo, offsetvalue) {\n    return api(apiEndpoints.recruiterJobs, httpMethods.GET, null, { limit: pageNo, offset: offsetvalue })\n}\n\nexport async function getAllApplicationJobsService(id) {\n    return api(`${apiEndpoints.recruiterJobs}/${id}/candidates`, httpMethods.GET)\n}\n\nexport async function createJobService(payload) {\n    return api(`${apiEndpoints.jobs}`, httpMethods.POST, payload)\n}","import { JOBS, CREATEJOBS, JOBAPPLICATION, commonAction } from \"../actionConstant\"\nimport { getAllJobsService, getAllApplicationJobsService, createJobService } from '../../../services/recruiter'\nimport { toast } from \"react-toastify\"\n\nexport function GetAllJobsAction(pageNo = 10, offsetvalue = 0) {\n    return async dispatch => {\n        try {\n            dispatch({ type: `${JOBS}_${commonAction.IS_API_LOADING}` })\n            const response = await getAllJobsService(pageNo, offsetvalue)\n            dispatch({ type: `${JOBS}_${commonAction.SET_API_DATA}`, payload: response })\n        } catch (error) {\n            dispatch({ type: `${JOBS}_${commonAction.SET_API_ERROR}`, payload: error.response })\n        }\n    }\n}\n\nexport function GetAllJobsApplicationsAction(id) {\n    return async dispatch => {\n        try {\n            dispatch({ type: `${JOBAPPLICATION}_${commonAction.IS_API_LOADING}` })\n            const response = await getAllApplicationJobsService(id)\n            dispatch({ type: `${JOBAPPLICATION}_${commonAction.SET_API_DATA}`, payload: response })\n        } catch (error) {\n            dispatch({ type: `${JOBAPPLICATION}_${commonAction.SET_API_ERROR}`, payload: error.response })\n        }\n    }\n}\n\nexport function createJobAction(payload) {\n    return async dispatch => {\n        try {\n            dispatch({ type: `${CREATEJOBS}_${commonAction.IS_API_LOADING}` })\n            const response = await createJobService(payload)\n            dispatch({ type: `${CREATEJOBS}_${commonAction.SET_API_DATA}`, payload: response.data })\n            toast(<div className=\"text-left\">\n                <p className=\"fx-14 success\">You have successfully posted a job.</p></div>, {\n                toastId: 'job-created'\n            });\n        } catch (error) {\n            dispatch({ type: `${CREATEJOBS}_${commonAction.SET_API_ERROR}`, payload: error.response })\n        }\n    }\n}\nexport function ClearPostJobDataAction() {\n    return dispatch => {\n        dispatch({ type: `${CREATEJOBS}_${commonAction.RESET}` })\n    }\n}","import React from 'react';\nimport Pagination from \"react-js-pagination\";\n\nimport './index.scss'\n// import \"bootstrap/less/bootstrap.less\";\n\nfunction CustomPagination(props) {\n    const { totalPage, onChangeHandler, activePage } = props\n    return (\n        <Pagination\n            activePage={activePage}\n            itemsCountPerPage={10}\n            totalItemsCount={totalPage}\n            // pageRangeDisplayed={5}\n            onChange={onChangeHandler}\n        />\n    );\n}\n\nexport default CustomPagination;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Layout from '../Layout';\nimport MyCustomButton from '../../components/MyCustomButton';\nimport PostedJobs from '../Homepage/postedJobs';\nimport ViewApplications from '../../components/Modals/viewApplications'\nimport { GetAllJobsAction, GetAllJobsApplicationsAction } from '../../redux/actions/recruiter'\nimport CustomPagination from '../../components/CustomPagination'\nimport MyCustomLoader from '../../components/MyCustomLoader';\nimport './index.scss'\nimport { Row } from 'react-bootstrap';\nimport Icons from '../../components/Icons';\n\nfunction Dashboard() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [showApps, setShowApps] = useState(false)\n    const [activePage, setActivePage] = useState(1)\n    const { isApiLoading, apiData } = useSelector((state) => state.jobs)\n\n    useEffect(() => {\n        dispatch(GetAllJobsAction())\n    }, [])\n\n    const PostJob = () => {\n        history.push('/home/post-job')\n    }\n\n    const viewApps = (id) => {\n        dispatch(GetAllJobsApplicationsAction(id))\n        setShowApps(true)\n    }\n\n    const onChangeHandler = (pageNumber) => {\n        setActivePage(pageNumber)\n        dispatch(GetAllJobsAction(10, pageNumber * 10))\n    }\n\n    return (\n        <div className=\"dashboard-container text-left\">\n            <div className=\"breadcrum white pb-4 d-flex align-items-center\" onClick={() => history.push('/home')}><Icons type=\"Home\" />&nbsp;Home</div>\n            <h2 className=\"white\">Jobs posted by you</h2>\n            {isApiLoading ? <div className=\"my-loader d-flex justify-content-center p-4\"> <MyCustomLoader /> </div> :\n                <>\n                    {apiData && apiData ?.data && apiData ?.data ?.length !== 0 ? <>\n                        <div className=\"posted-job-container d-flex pb-2\">\n                            <Row className=\"w-100\">\n                                <PostedJobs viewApps={viewApps} jobs={apiData ?.data ?.data} />\n                            </Row>\n                        </div>\n                        <div className=\"d-flex justify-content-center m-4\">\n                            {apiData ?.data ?.metadata ?.count >= 10 && <CustomPagination activePage={activePage} totalPage={apiData ?.data ?.metadata ?.count} onChangeHandler={onChangeHandler} />}\n                        </div>\n                    </>\n                        :\n                        <div className=\"no-job-posted-container text-center\">\n                            <p className=\"mb-4\">Your posted jobs will show here!</p>\n                            <MyCustomButton text=\"Post a job\" myClass=\"form-btn\" clickHandler={PostJob} />\n                        </div>\n                    }\n                </>\n            }\n            {showApps && <ViewApplications handleClose={() => setShowApps(false)} />}\n        </div>\n    );\n}\n\nexport default Layout(Dashboard);","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Form, FloatingLabel } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { postJobFormConstant, postJobValidationFormConstant } from '../../utils/constant';\nimport MyCustomInput from '../../components/MyCustomInput';\nimport MyCustomButton from '../../components/MyCustomButton';\nimport Layout from '../Layout';\nimport { createJobAction, ClearPostJobDataAction } from '../../redux/actions/recruiter';\nimport Icons from '../../components/Icons';\n\nfunction PostJob(props) {\n    const { history } = props\n    const [postJobForm, setPostJobForm] = useState(postJobFormConstant)\n    const [postJobFormValidation, setPostJobFormValidation] = useState(postJobValidationFormConstant)\n    const dispatch = useDispatch()\n    const { isApiLoading, apiData } = useSelector((state) => state.createJob)\n    const [allFieldsEmpty, setAllFieldsEmpty] = useState(false)\n\n    useEffect(() => {\n        return () => {\n            dispatch(ClearPostJobDataAction())\n        }\n    }, [])\n\n    useEffect(() => {\n        if (apiData) {\n            setPostJobForm(postJobFormConstant)\n            setPostJobFormValidation(postJobValidationFormConstant)\n            dispatch(ClearPostJobDataAction())\n        }\n    }, [apiData])\n\n    const onChangeHandler = e => {\n        const { id, value } = e.target\n        setPostJobForm((prevState) => ({ ...prevState, [id]: value }))\n        onBlurHandler(e)\n    }\n\n    const jobPost = (e) => {\n        e.preventDefault()\n        if (Object.values(postJobForm) ?.every(val => val.length === 0)) {\n            setPostJobFormValidation({\n                title: true,\n                description: true,\n                location: true\n            })\n            setAllFieldsEmpty(true)\n            return\n        } else setAllFieldsEmpty(false)\n        if (Object.values(postJobForm) ?.every(val => val.length <= 3)) {\n            setPostJobFormValidation({\n                title: true,\n                description: true,\n                location: true\n            })\n            return\n        }\n        for (const key in postJobForm) {\n            if (postJobForm.hasOwnProperty(key)) {\n                if (postJobForm[key].length <= 3) {\n                    setPostJobFormValidation((prevState) => ({ ...prevState, [key]: postJobForm[key].length <= 3 }))\n                    return\n                }\n            }\n        }\n\n        const payload = {\n            \"title\": postJobForm.title,\n            \"description\": postJobForm.description,\n            \"location\": postJobForm.location\n        }\n        dispatch(createJobAction(payload))\n    }\n\n    const onBlurHandler = e => {\n        const { id, value } = e.target\n        setPostJobFormValidation((prevState) => ({ ...prevState, [id]: value.length <= 3 }))\n    }\n\n    return (\n        <>\n            <div className=\"breadcrum white pb-4 d-flex align-items-center\" onClick={() => history.push('/home')}><Icons type=\"Home\" />&nbsp;Home > Post a Job</div>\n            <div className=\"post-job-containe form-adjuster-post-job\">\n                <Row className=\"justify-content-center\">\n                    <Col xs={8} md={5} className=\"bg-white form-shadow p-4\">\n                        <h4 className=\"text-left mb-3\">Post a Job</h4>\n                        <Form>\n                            <Form.Group className=\"mb-3 text-left\" controlId=\"title\">\n                                <Form.Label>Job title*</Form.Label>\n                                <MyCustomInput value={postJobForm.title} onChangeHandler={onChangeHandler} type=\"title\" placeholder=\"Enter job title\" required={true} isInvalid={postJobFormValidation.title} onBlurHandler={onBlurHandler} />\n                                <Form.Text className=\"text-muted\">\n                                    Job title should be in 3 to 100 words\n                            </Form.Text>\n                            </Form.Group>\n                            <div className=\"text-left\">\n                                <Form.Label >Description*</Form.Label>\n                                <FloatingLabel controlId=\"description\" label=\"description\">\n                                    <Form.Control\n                                        as=\"textarea\"\n                                        placeholder=\"Leave a comment here\"\n                                        style={{ height: '100px' }}\n                                        value={postJobForm.description}\n                                        isInvalid={postJobFormValidation.description}\n                                        onChange={onChangeHandler}\n                                        onBlur={onBlurHandler}\n                                    />\n                                    <Form.Text className=\"text-muted\">\n                                        Job description should be in 3 to 100 words\n                            </Form.Text>\n                                </FloatingLabel>\n                            </div>\n                            <Form.Group className=\"mb-3 mt-3 text-left\" controlId=\"location\">\n                                <Form.Label>Location*</Form.Label>\n                                <MyCustomInput value={postJobForm.location} onChangeHandler={onChangeHandler} type=\"location\" placeholder=\"Enter location\" required={true} isInvalid={postJobFormValidation.location} onBlurHandler={onBlurHandler} />\n                                <Form.Text className=\"text-muted\">\n                                    Location should be in 3 to 100 words\n                            </Form.Text>\n                            </Form.Group>\n                            {allFieldsEmpty && <p className=\"text-danger text-right\">All fields are mandatory.</p>}\n                            <div className=\"justify-content-center\">\n                                <MyCustomButton text=\"Post\" myClass=\"form-btn\" clickHandler={jobPost} isLoading={isApiLoading} />\n                            </div>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        </>\n    );\n}\n\nexport default Layout(PostJob);","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Homepage from '../pages/Homepage';\nimport Login from '../pages/Auth/login';\nimport Register from '../pages/Auth/register';\nimport ResetPswd from '../pages/Auth/resetPswd';\nimport ForgotPswd from '../pages/Auth/forgotPswd';\nimport ProtectedRoute from './protectedRoute';\nimport Dashboard from '../pages/Dashboard';\nimport PostJob from '../pages/PostJob';\n\nexport default function Routing() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    <Homepage />\n                </Route>\n                <Route exact path=\"/\">\n                    <Homepage />\n                </Route>\n                <Route exact path=\"/login\">\n                    <Login />\n                </Route>\n                <Route exact path=\"/register\">\n                    <Register />\n                </Route>\n                <Route exact path=\"/reset-password\">\n                    <ResetPswd />\n                </Route>\n                <Route exact path=\"/forgot-password\">\n                    <ForgotPswd />\n                </Route>\n                <ProtectedRoute exact component={Dashboard} path=\"/home\" />\n                <ProtectedRoute exact component={PostJob} path=\"/home/post-job\" />\n            </Switch>\n        </Router>\n    );\n}\n","import { REGISTER, commonAction } from \"../../actions/actionConstant\"\n\nconst intialState = {\n    isApiLoading: false,\n    apiData: null,\n    apiError: false\n}\n\nexport const RegisterReducer = (state = intialState, action) => {\n    switch (action.type) {\n        case `${REGISTER}_${commonAction.IS_API_LOADING}`:\n            return {\n                ...state,\n                isApiLoading: action.payload\n            }\n\n        case `${REGISTER}_${commonAction.SET_API_DATA}`:\n            return {\n                ...state,\n                apiData: action.payload.data,\n                isApiLoading: false,\n                apiError: false\n            }\n\n        case `${REGISTER}_${commonAction.SET_API_ERROR}`:\n            return {\n                ...state,\n                isApiLoading: false,\n                apiError: action.payload.data\n            }\n\n        case `${REGISTER}_${commonAction.CLEAR_ERROR}`:\n            return {\n                ...state,\n                isApiLoading: false,\n                apiError: false\n            }\n\n        case `${REGISTER}_${commonAction.RESET}`:\n            return {\n                ...state,\n                isApiLoading: false,\n                apiError: false,\n                apiData: null\n            }\n\n        default: return { ...state }\n    }\n}","import { LOGIN, commonAction } from \"../../actions/actionConstant\"\n\nconst intialState = {\n    isApiLoading: false,\n    apiData: null,\n    apiError: false\n}\n\nexport const LoginReducer = (state = intialState, action) => {\n    switch (action.type) {\n        case `${LOGIN}_${commonAction.IS_API_LOADING}`:\n            return {\n                ...state,\n                isApiLoading: true\n            }\n\n        case `${LOGIN}_${commonAction.SET_API_DATA}`:\n            return {\n                ...state,\n                apiData: action.payload.data,\n                isApiLoading: false,\n                apiError: false\n            }\n\n        case `${LOGIN}_${commonAction.SET_API_ERROR}`:\n            return {\n                ...state,\n                isApiLoading: false,\n                apiError: action.payload.data\n            }\n\n        case `${LOGIN}_${commonAction.CLEAR_ERROR}`:\n            return {\n                ...state,\n                isApiLoading: false,\n                apiError: false\n            }\n\n        case `${LOGIN}_${commonAction.RESET}`:\n            return {\n                ...state,\n                isApiLoading: false,\n                apiError: false,\n                apiData: null\n            }\n\n        default: return { ...state }\n    }\n}","import { JOBS, commonAction } from \"../../actions/actionConstant\"\n\nconst intialState = {\n    isApiLoading: false,\n    apiData: null,\n    apiError: false\n}\n\nexport const JobsReducer = (state = intialState, action) => {\n    switch (action.type) {\n        case `${JOBS}_${commonAction.IS_API_LOADING}`:\n            return {\n                ...state,\n                isApiLoading: true\n            }\n\n        case `${JOBS}_${commonAction.SET_API_DATA}`:\n            return {\n                ...state,\n                apiData: action.payload.data,\n                isApiLoading: false,\n                apiError: false\n            }\n\n        case `${JOBS}_${commonAction.SET_API_ERROR}`:\n            return {\n                ...state,\n                isApiLoading: false,\n                apiError: action.payload\n            }\n\n        default: return { ...state }\n    }\n}","import { JOBAPPLICATION, commonAction } from \"../../actions/actionConstant\"\n\nconst intialState = {\n    isApiLoading: false,\n    apiData: null,\n    apiError: false\n}\n\nexport const ApplicantsReducer = (state = intialState, action) => {\n    switch (action.type) {\n        case `${JOBAPPLICATION}_${commonAction.IS_API_LOADING}`:\n            return {\n                ...state,\n                isApiLoading: true\n            }\n\n        case `${JOBAPPLICATION}_${commonAction.SET_API_DATA}`:\n            return {\n                ...state,\n                apiData: action.payload.data,\n                isApiLoading: false,\n                apiError: false\n            }\n\n        case `${JOBAPPLICATION}_${commonAction.SET_API_ERROR}`:\n            return {\n                ...state,\n                isApiLoading: false,\n                apiError: action.payload\n            }\n\n        default: return { ...state }\n    }\n}","import { CREATEJOBS, commonAction } from \"../../actions/actionConstant\"\n\nconst intialState = {\n    isApiLoading: false,\n    apiData: null,\n    apiError: false\n}\n\nexport const CreateJobsReducer = (state = intialState, action) => {\n    switch (action.type) {\n        case `${CREATEJOBS}_${commonAction.IS_API_LOADING}`:\n            return {\n                ...state,\n                isApiLoading: true\n            }\n\n        case `${CREATEJOBS}_${commonAction.SET_API_DATA}`:\n            return {\n                ...state,\n                apiData: action.payload.data,\n                isApiLoading: false,\n                apiError: false\n            }\n\n        case `${CREATEJOBS}_${commonAction.SET_API_ERROR}`:\n            return {\n                ...state,\n                isApiLoading: false,\n                apiError: action.payload\n            }\n\n        case `${CREATEJOBS}_${commonAction.RESET}`:\n            return {\n                ...state,\n                isApiLoading: false,\n                apiError: false,\n                apiData: null\n            }\n        default: return { ...state }\n    }\n}","import { combineReducers } from 'redux';\n\nimport { RegisterReducer } from './AuthReducer/registerReducer';\nimport { LoginReducer } from './AuthReducer/loginReducer';\nimport { JobsReducer } from './recruiter/jobsReducer';\nimport { ApplicantsReducer } from './recruiter/applicantsReducer'\nimport { CreateJobsReducer } from './recruiter/createJob';\n\nconst rootReducer = combineReducers({\n    register: RegisterReducer,\n    login: LoginReducer,\n    jobs: JobsReducer,\n    applicants: ApplicantsReducer,\n    createJob: CreateJobsReducer\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger'\n\nimport rootReducer from './reducer';\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\n\n\nexport default store;","import Routing from './routes';\nimport { Provider } from 'react-redux'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport store from './redux/store';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Routing />\n        <ToastContainer\n          position=\"top-right\"\n          autoclose={5000}\n          hideProgressBar\n          draggable\n        />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}